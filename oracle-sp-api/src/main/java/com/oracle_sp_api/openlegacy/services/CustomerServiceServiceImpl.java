package com.oracle_sp_api.openlegacy.services;

import org.apache.commons.lang3.StringUtils;
import com.oracle_sp_sdk.openlegacy.Retrievecustomer;
import java.math.BigDecimal;
import org.openlegacy.core.rpc.RpcSession;
import org.openlegacy.core.rpc.actions.RpcActions;

import org.openlegacy.core.annotations.services.*;
import org.openlegacy.core.annotations.OpenlegacyDesigntime;
import org.openlegacy.impl.services.ws.ServiceBinder;
import org.springframework.stereotype.Component;
import org.springframework.context.ApplicationContext;
import javax.inject.Inject;
import org.openlegacy.utils.ActionUtil;

/**
 *  A service implementation which invokes OpenLegacy API, and returns a service output.
 *  The code below should be customize to perform a working scenario which goes through the relevant screens.
 *  Can be tested by invoking the test CustomerServiceServiceTest.
 *  The interface CustomerServiceService can be customized to enabling passing parameters to the service, and this class can consume the parameters within the relevant screens.
 */
@Service(name = "CustomerService")
@OpenlegacyDesigntime(editor = "WebServiceEditor")
@Component
public class CustomerServiceServiceImpl implements CustomerServiceService {

    @Inject
    private ApplicationContext applicationContext;


    @Inject
    private ServiceBinder serviceBinder;

    @Override
    @ServiceMethod(name = "getCustomerService", entities = {
            @EntityMapping(alias="retrievecustomer", entity=com.oracle_sp_sdk.openlegacy.Retrievecustomer.class)})
    @LogServiceUsage
    @BindInputs(endpoints = {
            @BindTo(endpoint = "retrievecustomer.custidIn", expression = "custidIn")})
    @BindOutputs(endpoints = {
            @BindFrom(endpoint = "emailOut", expression = "retrievecustomer.emailOut"),
            @BindFrom(endpoint = "nameOut", expression = "retrievecustomer.nameOut"),
            @BindFrom(endpoint = "bankcodeOut", expression = "retrievecustomer.bankcodeOut")})
    public CustomerServiceOut getCustomerService(CustomerServiceIn customerServiceIn) throws Exception {
        CustomerServiceOut customerServiceOut = new CustomerServiceOut();
        /* autogenerated - sessions block start*/
        ;
        RpcSession oracleSpSdkRpcSession = applicationContext.getBean("oracleSpSdkRpcSession", RpcSession.class);
        /* autogenerated - sessions block end */
        ;

        try {
            /* autogenerated - execution block start */;
            Retrievecustomer retrievecustomer = serviceBinder.bindInputs(this, "getCustomerService", "retrievecustomer", new Retrievecustomer(), customerServiceIn);
            retrievecustomer = oracleSpSdkRpcSession.doAction(ActionUtil.getRpcAction(Retrievecustomer.class), retrievecustomer);
            /* autogenerated - execution block end */;

            /* autogenerated - output block start */;
            customerServiceOut = serviceBinder.bindOutput(this, "getCustomerService", customerServiceOut, new String[]{"customerServiceIn", "retrievecustomer"}, customerServiceIn, retrievecustomer);
            /* autogenerated - output block end */;

            return customerServiceOut;
        } finally {
            /* autogenerated - disconnect block start */
            ;
            oracleSpSdkRpcSession.disconnect();
            /* autogenerated - disconnect block end */
            ;
        }
    }

}
