<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>docker-mf-rpc-api</groupId>
    <artifactId>docker-mf-rpc-api</artifactId>
    <version>0.1</version>
    <name>docker-mf-rpc-api</name>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.openlegacy</groupId>
        <artifactId>openlegacy-dependencies-manager</artifactId>
        <version>4.2.4.b1914</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring-boot.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <!-- Spring.Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <!-- MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <!-- OpenLegacy.PropertiesEncryption-->
        <dependency>
            <groupId>org.openlegacy.services</groupId>
            <artifactId>properties-encryption-cloud-starter</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <!-- OpenLegacy.Loadbalanced -->
        <dependency>
            <groupId>org.openlegacy.microservices</groupId>
            <artifactId>oauth2-load-balanced-client</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <!-- OpenLegacy Api Logger -->
        <dependency>
            <groupId>org.openlegacy.microservices</groupId>
            <artifactId>openlegacy-api-logger</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <!-- OpenLegacy -->
        <dependency>
            <groupId>org.openlegacy</groupId>
            <artifactId>openlegacy-actuator</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <dependency>
            <groupId>com.openlegacy.enterprise.plugins</groupId>
            <artifactId>management-plugin</artifactId>
            <version>${openlegacy.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openlegacy</groupId>
            <artifactId>openlegacy-swagger</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <!-- OpenLegacy.Lombok -->
        <dependency>
            <groupId>org.openlegacy</groupId>
            <artifactId>openlegacy-lombok</artifactId>
            <version>${openlegacy.version}</version>
            <optional>true</optional>
        </dependency>
        <!-- OpenLegacy.Cache -->
        <dependency>
            <groupId>org.openlegacy.cache</groupId>
            <artifactId>openlegacy-cache-ehcache</artifactId>
            <version>${openlegacy.version}</version>
        </dependency>
        <!-- OpenLegacy.SDK -->
        <dependency>
            <groupId>docker-mf-rpc-sdk</groupId>
            <artifactId>docker-mf-rpc-sdk</artifactId>
            <version>0.1</version>
        </dependency>
        <!-- H2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openlegacy.tools</groupId>
                <artifactId>openlegacy-connector-tool-maven-plugin</artifactId>
                <version>${openlegacy.version}</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>com.google.collections</groupId>
                            <artifactId>google-collections</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>${spotify.docker.version}</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <repository>${project.artifactId}</repository>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
